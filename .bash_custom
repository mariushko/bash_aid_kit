# vi:syntax=sh

[[ ${-} == *i* ]] || return 0

[[ ${_} != ${0} ]] && {
  export SOURCEDIR="$(dirname ${BASH_SOURCE})"
} || {
  export SOURCEDIR=~/.env
}

# history
export HISTCONTROL=ignoreboth
export HISTSIZE=10000
export HISTFILESIZE=${HISTSIZE}
shopt -s histappend
export PROMPT_COMMAND="history -a; history -n"

# vagrant
export VAGRANT_DEFAULT_PROVIDER=virtualbox

# bash
shopt -s checkwinsize
shopt -s autocd
## turn off flow control: Ctrl-S/Ctrl-Q
stty -ixon

alias ls="LC_COLLATE=C ls"
alias cm="clean_mem.sh"
which vim &> /dev/null && {
  alias vi=vim
  # default editor
  export FCEDIT=vim
  export EDITOR=vim
  export VISUAL=vim

  [[ -f ~/.vimrc ]] && alias vim="vim -u ~/.vimrc" || {
    alias vim="vim -u ${SOURCEDIR}/.vimrc"
    alias vim-plug-update="vim +PlugUpgrade +PlugUpdate +qa!"
  }
}
[[ -f ~/.tmux.conf ]] \
  && alias alias tmux="tmux -f ~/.tmux.conf" \
  || alias tmux="tmux -f ${SOURCEDIR}/.tmux.conf"
[[ -f ~/.screenrc ]] \
  && alias screen="screen -c ~/.screenrc" \
  || alias screen="screen -c ${SOURCEDIR}/.screenrc"

# reveal.fs slides
# your markdown file name has to be: index.md
which docker &> /dev/null && {
  function slides_off(){
    docker rm -f revealjs &> /dev/null || true
  }
  function slides_on(){
    local path=${1:-.}
    [[ -f "${path}/index.md" && -r "${path}/index.md" ]] || {
      echo No access to "${path}/index.md" file
      echo Wrong path?
      echo Gimme path to folder where index.md file is
      return 1
    }
    slides_off
    docker images --format '{{.Repository}}:{{.Tag}}' | grep -q 'mariushko/revealjs:latest' || {
      cd "${SOURCEDIR}/reveal.js/"
      ./build.sh
      cd -
    }
    docker run --name revealjs -d -p 8000:8000 -p 35729:35729 \
    -v "$(realpath "${path}")":/revealjs/slides:ro \
    mariushko/revealjs:latest > /dev/null && {
      echo Container started
      echo "Visit: http//127.0.0.1:8000"
    } || {
      echo I can not run container properly
      return 2
    }
  }
}
# less
export LESS="-REXF"

function langc(){
  eval LANG=C LC_ALL=C "$@"
}

function b2h(){
  # bites to human readable format
  # langc numfmt --to=iec --format "%.1f" ${1:-0} \
  langc numfmt --to=iec --format "%f" ${1:-0} \
    | sed 's/\.0//' \
    | tr '[:upper:]' '[:lower:]' \
    | awk '{if ($1 ~ /\.[0-9]k$/){
              printf("%dk\n", gensub(/k$/, "", "g", $1) + 0.5)
            }else{
              print
           }}' \
    | awk '{if ($1 ~ /\.[0-9]m$/){
              printf("%dm\n", gensub(/m$/, "", "g", $1) + 0.5)
            }else{
              print
           }}'
}

function k2h(){
  # kbites to human readable format
  b2h $(( ${1:-0} * 1024 ))
}

function s2h(){
  # seconds to human readable format
  local -i T=${1:-0} D H M S
  local -l RET=""
  (( T == 0 )) && return 0
  (( D=T/60/60/24, H=T/60/60%24, M=T/60%60, S=T%60 ))
  (( D > 0 )) && RET="${RET}${D}d "
  (( H > 0 )) && RET="${RET}${H}h "
  (( M > 0 )) && RET="${RET}${M}m "
  (( S > 0 )) && RET="${RET}${S}s "
  echo ${RET}
}

declare -xf langc b2h k2h s2h

unalias ll &> /dev/null || :
function ll(){
  # LC_COLLATE=C ls -lah --color "$@" | less
  {
    (( $# == 0 )) && {
      [[ "$(ls -1)" ]] && ls -dUlh --color -- .* * || ls -dUlh --color -- .*
    } || {
      # non folders first
      for arg
      do
        [[ -d "${arg}" ]] && continue
        [[ -e "${arg}" ]] || {
          echo File "${arg}" unavailable
          continue
        }
        ls -Ul --color -- "${arg}"
      done
      # folder now
      for arg
      do
        [[ ! -d "${arg}" ]] && continue
        [[ -r "${arg}" && -x "${arg}" ]] || {
          echo Folder "${arg}" unavailable
          continue
        }
        echo "${arg}:"
        cd "${arg}"
        [[ "$(ls -1)" ]] && ls -dUlh --color -- .* * || ls -dUlh --color -- .*
        cd - > /dev/null
      done
    }
  } | less
}

[[ -f "${SOURCEDIR}/.bash_priv_pre" ]] && source "${SOURCEDIR}/.bash_priv_pre"
[[ -f "~/.bash_priv_pre" ]] && source "~/.bash_priv_pre"

return 0
